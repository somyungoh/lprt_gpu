#ifndef SM_MESH_H_
#define SM_MESH_H_

/***********************************************************
*
*	mesh.h
*
*	A mesh object that is generated by reading OBJ file.
*	
*	About [vertexIndices, uvIndices, normalIndices]
*	Stores index of v, uv, n for each faces.
*	That is, 3 neighboring points refers to same face.
*	(i.e. vi[0], vi[1], vi[2] refers to same face)
*
*
************************************************************/

#include <vector>
#include <fstream>
#include <iostream>
#include <string>
#include <sstream>
#include "smath.h"
#include "shape.h"
#include "material.h"
#include "bvh.h"

class mesh : public shape{
public:
	// constructors
	mesh();
	mesh(const vec3 &center, const material &m, int ID);
	~mesh();

	// getters, setters
	bool  load_objFile(const std::string &filename);
	bool  load_locaterFile(const std::string &filename);
	void  buildBVHTree(int maxShapesInNode, int partitionType);
	bool  intersection(const ray &ray, hitqueue &hits) const override;
	void  translate(const vec3 &tx, const vec3 &ty, const vec3 &tz);
	void  rotate(float angle, const vec3 &axis, float dt);
	
	// data storage
	std::vector<shape*> faces;
	std::vector<vec3> vertices;
	std::vector<vec3> normals;
	std::vector<vec3> uvs;

	// acceleration structure
	BVHAccel bvhTree;
};

#endif // !SM_MESH_H_